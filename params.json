{"name":"Travis-api","tagline":"The public Travis API","body":"# The public Travis API\r\n\r\nThis is the app running on https://api.travis-ci.org/\r\n\r\n## Requirements\r\n\r\n1. PostgreSQL 9.3 or higher\r\n1. Redis\r\n1. RabbitMQ\r\n\r\n## Installation\r\n\r\n### Setup\r\n\r\n    $ bundle install\r\n\r\n### Database setup\r\n\r\n1. `rake db:create db:structure:load`\r\n1. Clone `travis-logs` and copy the `logs` database (assume the PostgreSQL user is `postgres`):\r\n```sh-session\r\ncd ..\r\ngit clone https://github.com/travis-ci/travis-logs.git\r\ncd travis-logs\r\nrvm jruby do bundle exec rake db:migrate # `travis-logs` requires JRuby\r\npsql -c \"DROP TABLE IF EXISTS logs CASCADE\" -U postgres travis_development\r\npg_dump -t logs travis_logs_development | psql -U postgres travis_development\r\n```\r\n\r\nRepeat the database steps for `RAILS_ENV=test`.\r\n```sh-session\r\nRAILS_ENV=test rake db:create db:structure:load\r\npushd ../travis-logs\r\nRAILS_ENV=test rvm jruby do bundle exec rake db:migrate\r\npsql -c \"DROP TABLE IF EXISTS logs CASCADE\" -U postgres travis_test\r\npg_dump -t logs travis_logs_test | psql -U postgres travis_test\r\npopd\r\n```\r\n\r\n\r\n### Run tests\r\n\r\n    $ rake spec\r\n\r\n### Run the server\r\n\r\n    $ script/server\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n\r\n### API documentation\r\n\r\nWe use source code comments to add documentation. If the server is running, you\r\ncan browse an HTML documenation at [`/docs`](http://localhost:5000/docs).\r\n\r\n### Project architecture\r\n\r\n    lib\r\n    `-- travis\r\n        `-- api\r\n            `-- app\r\n                |-- endpoint    # API endpoints\r\n                |-- extensions  # Sinatra extensions\r\n                |-- helpers     # Sinatra helpers\r\n                `-- middleware  # Rack middleware\r\n\r\nClasses inheriting from `Endpoint` or `Middleware`, they will automatically be\r\nset up properly.\r\n\r\nEach endpoint class gets mapped to a prefix, which defaults to the snake-case\r\nclass name (i.e. `Travis::Api::App::Profile` will map to `/profile`).\r\nIt can be overridden by setting `:prefix`:\r\n\r\n``` ruby\r\nrequire 'travis/api/app'\r\n\r\nclass Travis::Api::App\r\n  class MyRouts < Endpoint\r\n    set :prefix, '/awesome'\r\n  end\r\nend\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}